<5조 발표>
차량 번호판 탐지

[데이터 및 모델]
모델:
- Yolov8 기반 차량 번호판 탐지

데이터 전처리:
- 기존 데이터셋에 노이즈 적용

[학습 결과]
1. Confusion Matrix
노이즈 추가 전:
- 배경을 잘못 분류하는 경우 많음.
노이즈 추가 후:
- 배경을 번호판으로 잘못 인식하는 경우 늘었으나, 번호판을 정확히 예측한 비율 증가.

2. Precision-Recall 그래프
높은 Recall에도 Precision이 안정적으로 유지됨.

3. 이미지 분석
- 번호판 누락 문제 일부 해결.
- 배경을 번호판으로 오인하는 경우 여전히 존재.

[연구 목표]
1. 노이즈 포함 데이터셋 학습.

2. 낮은 해상도 번호판에 대한 높은 정확도 구현.

[조교님 질문 & 답변]
1. 노이즈 생성 과정 및 모션 블러 적용 방식 설명 요청
- 빗줄기 효과를 합성하여 노이즈 패턴 생성.

2. Train/Test 데이터 분포 및 성능 결과 관련 의문
- 노이즈 여부와 상관없이 결과 도출.

3. Precision-Recall Curve의 MAP 수치
- 0.768에서 0.930으로 상승.

4. 베이스라인 개선 필요성
- OCR로 시도 예정이나 시간 부족으로 진행 못 함.



<6조 발표>
UFC 경기 결과 예측 모델

[모델 구현]
데이터 전처리:
- 기존 4개 특성(키, 무게, 리치, 스탠스)에서 모든 사용 가능한 특성 확장.

체급별 분류:
- 선수-경기를 그래프 노드-엣지로 표현. GCN 기반 양방향 엣지 적용.

Threshold 조정:
- 초기값 0.5 → 0.6~0.7 조정.
Cross-validation:
- Hyperparameter 최적 epoch 조합 도출(0.001, 8, 2).

[학습 결과]
1. Logistic Regression이 모든 feature에서 최고 성능.

2. 기존 회귀분석 대비 성능 저조.

[데이터 시각화]
- 체급, 나이, 승리 수 등 특성 그룹화.
- Red/Blue 승률 비교:
  - Red 승률이 높아 Blue 기준 학습 시 오류 증가.

[향후 계획]
EvolveGCN:
- 동적 그래프 모델 적용.
EvolveGCN-H:
- Hidden State 학습(사용 예정).

[조교님 질문 & 답변]
1. Loss Function 사용
- 기본값 사용.

2. 체급별 Edge 미존재 문제
- 제거하지 않음.

3. Train/Test 비율 조정 제안
- Red/Blue 레이블 랜덤화 시도 중.



<7조 발표>
Visual Realism 향상

[모델 및 구현]
1. DreamGaussian
- 입력 이미지 전처리 후 텍스처 정제.
- Inference 시간: 94초
- 메모리: 3000MB.

2. CRM
- Orthographic 이미지 생성 후 텍스처 정제.
- Inference 시간: 78초
- 메모리: 21962MB.

3. InstantMesh
- 최종 결과물이 가장 우수.
- Inference 시간: 22초
- 메모리: 27186MB.

[Super-Resolution]
기술:
- DRCT 및 IPG 기반 이미지 고해상화 적용 예정.

[Fine-tuning]
LRM 일부 Transformer 레이어만 업데이트로 GPU 사용량 감소.

[결과]
3D 모델링 결과:
- 사과, 인형, 공장 모델 비교 시 품질 개선 확인.

Fine-tuning 적용 후 Loss 감소.

[한계 및 계획]
한계:
- 3D Metric 적용 어려움
- 기술적 한계.
계획:
- Sketch-to-Image 기술 적용(~12/08)
- 성능 평가(~12/08).

[조교님 질문 & 답변]
1. Fine-tuning 데이터셋 및 Hyperparameter 변화 여부
- 데이터셋 유지
- Hyperparameter 변경 시도 예정.



<전체 코멘트>
Cross-validation 방식 전반적으로 적용 권장.
(현재 6조만 사용)
